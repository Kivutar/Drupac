<?php

function harvest_import_record($id) {
    $record = sigb_connector_scrape_bib($id);
    if ( !$record ) { return; }

    // Biblio already exists ?
    $existing_nid = harvest_record_exists($id);
    $node = '';

    if ( $existing_nid ) {
	$node = node_load($existing_nid);
print_r( $node );
    } else {
	$node = new stdClass();
	$node->type = 'biblio_record';
	node_object_prepare($node);
    }
    
    $node->title = $record['title'];
    unset( $record['title'] );

    foreach ( $record as $name => $values ) {
	if ( is_array( $values ) ) {
	    foreach ( $values as $value ) {
	        $node->{$name}['und'][] = array( 'value' => $value );
	    }
	}
	else {
	    $node->{$name}['und'][0]['value'] = $values;
	}
    }
    
    $node->promote = 0;
    $node = node_submit($node);
    node_save($node);
    return $node->nid;
}

function harvest_import_records($offset, $number) {
    $count = 0;
    for ( $i = $offset; $i < $offset+$number; $i++ ) {
        $nid = harvest_import_record($i);
	if ( $nid ) { 
	    $count++;
	    echo $count %20 ? "$i " : "$i ** $count done.\n"; 
	}
    }
}

function harvest_record_exists($id) {
    $result = db_query("SELECT entity_id FROM {field_revision_biblio_record_biblionumber} WHERE bundle = 'biblio_record' AND biblio_record_biblionumber_value = $id");
    $record = $result->fetchAssoc();

    return $record['entity_id'];
}
