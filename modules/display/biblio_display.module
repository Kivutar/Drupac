<?php
#$themedata = biblio_display_get_theme_config();
#$theme_name = $themedata['name'];
#module_load_include('inc', 'biblio_display', 'themes/' . $theme_name . '/theme');

function biblio_display_menu() {
    $items = array();
    $items['admin/config/drupac/display'] = array(
        'title' => 'Drupac displaying settings',
        'description' =>  'Set up displaying of druapc record',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('biblio_display_admin_settings'),
        'file' => 'biblio_display.admin.inc',
        'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
    );
	$items['display/theme'] = array(
		'title' => 'theme settings',
		'description' =>  'Set up displaying of druapc record',
		'page callback' => 'drupal_get_form',
        'page arguments' => array('biblio_display_theme_settings'),
        'file' => 'biblio_display.admin.inc',
        'access arguments' => array('administer site configuration'),
#    	'type' => MENU_CALLBACK,

	);
    return $items;
}

function biblio_display_theme() {
	$theme = 'simple';
	return array(
		'bibliorecord' => array(
			'render element' => 'elements',
			'template' => 'themes/' . $theme . '/node--biblio-record',
		),
	);
}

function biblio_display_node_view_alter(&$build) {
	if ($build['#bundle'] == 'biblio_record') {
		$build['#theme'] = 'bibliorecord';
	}
}

function biblio_display_preprocess_bibliorecord(&$variables) {
	template_preprocess_node($variables);
	$title = $variables['title'];
	$themedata = biblio_display_get_theme_config();

	foreach ($themedata['field'] as $fieldname => $region) {
		if ( isset($variables['content'][$fieldname]) ) {
			$variables[$region][$fieldname] = $variables['content'][$fieldname];
		}
	}
}

function biblio_record_field_attach_view_alter(&$output, $context) {
	if ( array_key_exists('biblio_record_author', $output) ) {
		$output['biblio_record_author']['#theme'] = 'authorfield';
	}
}

function theme_authorfield($variables) {
#Array ( 
#[elements] => Array ( 
#	[#theme] => bibliofield 
#	[#weight] => 1 
#	[#title] => Author 
#	[#access] => 1 
#	[#label_display] => above 
#	[#view_mode] => full 
#	[#language] => und 
#	[#field_name] => biblio_record_author 
#	[#field_type] => text 
#	[#field_translatable] => 1 
#	[#entity_type] => node 
#	[#bundle] => biblio_record 
#	[#items] => Array ( 
#		[0] => Array ( 
#			[value] => Camilla Lackberg 
#			[format] => 
#			[safe_value] => Camilla Lackberg 
#		) 
#	) 
#	[#formatter] => text_default 
#	[0] => Array ( 
#		[#markup] => Camilla Lackberg 
#	) 
  $output = '<h1>By ' . $variables['elements']['#items']['0']['safe_value'] . '</h1>';

  return $output;
}

function biblio_display_init() {
    drupal_add_css(drupal_get_path('module', 'biblio_display') . '/themes/simple/biblio.css');
}

function biblio_display_get_theme_config($theme_name = 'simple') {
	$filename = drupal_get_path('module', 'biblio_display') . '/themes/' . $theme_name .'/' . $theme_name . '.info';
	return drupal_parse_info_file($filename);
}

