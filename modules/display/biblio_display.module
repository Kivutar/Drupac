<?php

function biblio_display_theme() {
	$theme = 'simple';
	return array(
		'bibliorecord' => array(
			'render element' => 'elements',
			'template' => 'themes/' . $theme . '/node--biblio-record',
		),
		'bibliofield' => array(
			'render element' => 'elements',
		),
	);
}

function biblio_display_node_view_alter(&$build) {
	if ($build['#bundle'] == 'biblio_record') {
		$build['#theme'] = 'bibliorecord';
	}
}

function biblio_display_preprocess_bibliorecord(&$variables) {
	template_preprocess_node($variables);
	$config = array(
		'biblio_record_author' => 'header',
		'biblio_record_isbn' => 'left',
		'biblio_record_language' => 'left',
		'biblio_record_format' => 'left',
		'biblio_record_pub' => 'left',
		'biblio_record_year_pub' => 'left',
		'biblio_record_series' => 'left',
		'biblio_record_edition' => 'left',
		'biblio_record_add_details' => 'right',
		'biblio_record_description' => 'right',
		'biblio_record_subjects' => 'left',
	);
	foreach ($config as $key => $zone) {
		if ( isset($variables['content'][$key]) && $zone != 'none') {
			$variables[$zone][$key] = $variables['content'][$key];
		}
	}
}

function biblio_record_field_attach_view_alter(&$output, $context) {
	if ( array_key_exists('biblio_record_author', $output) ) {
		$output['biblio_record_author']['#theme'] = 'bibliofield';
	}
}

function theme_bibliofield($variables) {
#Array ( 
#[elements] => Array ( 
#	[#theme] => bibliofield 
#	[#weight] => 1 
#	[#title] => Author 
#	[#access] => 1 
#	[#label_display] => above 
#	[#view_mode] => full 
#	[#language] => und 
#	[#field_name] => biblio_record_author 
#	[#field_type] => text 
#	[#field_translatable] => 1 
#	[#entity_type] => node 
#	[#bundle] => biblio_record 
#	[#items] => Array ( 
#		[0] => Array ( 
#			[value] => Camilla Lackberg 
#			[format] => 
#			[safe_value] => Camilla Lackberg 
#		) 
#	) 
#	[#formatter] => text_default 
#	[0] => Array ( 
#		[#markup] => Camilla Lackberg 
#	) 
  $output = '<h1>By ' . $variables['elements']['#items']['0']['safe_value'] . '</h1>';

#  // Render the label, if it's not hidden.
#  if (!$variables['label_hidden']) {
#    $output .= '<div class="field-labels"' . $variables['title_attributes'] . '>' . $variables['label'] . ':&nbsp;</div>';
#  }

#  // Render the items.
#  $output .= '<div class="field-items"' . $variables['content_attributes'] . '>';
#  foreach ($variables['items'] as $delta => $item) {
#    $classes = 'field-item ' . ($delta % 2 ? 'odd' : 'even');
#    $output .= '<div class="' . $classes . '"' . $variables['item_attributes'][$delta] . '>' . drupal_render($item) . '</div>';
#  }
#  $output .= '</div>';

#  // Render the top-level DIV.
#  $output = '<div class="' . $variables['classes'] . '"' . $variables['attributes'] . '>' . $output . '</div>';

  return $output;
}

function biblio_display_init() {
    drupal_add_css(drupal_get_path('module', 'biblio_display') . '/themes/simple/biblio.css');
}

